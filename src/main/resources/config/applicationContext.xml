<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<context:annotation-config />
	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->
	<mvc:annotation-driven/>

	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.wu" />

	<!--拦截器 验证签名及是否登录-->
	<mvc:interceptors>
		<bean class="com.wu.common.interceptor.AuthorizeInterceptor"/>
	</mvc:interceptors>


	<mvc:annotation-driven>
		<!--处理返回json-->
		<mvc:message-converters register-defaults="true">
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes" >
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>QuoteFieldNames</value>
						<value>WriteNullStringAsEmpty</value>
						<value>WriteDateUseDateFormat</value>
						<value>WriteNullNumberAsZero</value>
						<value>WriteNullListAsEmpty</value>
						<value>WriteMapNullValue</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--异常捕捉处理-->
	<bean id="exceptionResolver" class="com.wu.common.handler.ExceptionHandler"/>

	<!--多数据源配置-->
	<import resource="db.xml"/>

	<!--dubbo,redis配置-->
	<!--<import resource="dubbo.xml"/>-->
	<import resource="redis.xml"/>
</beans>